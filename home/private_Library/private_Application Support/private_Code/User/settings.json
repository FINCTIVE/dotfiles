{
    // Vim
    "vim.useSystemClipboard": true,
    "vim.foldfix": true,
    // Vim Keybindings
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": [
                "H",
            ],
            "after": [
                "^",
            ],
        },
        {
            "before": [
                "L",
            ],
            "after": [
                "$",
            ],
        },
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "H",
            ],
            "after": [
                "^",
            ],
        },
        {
            "before": [
                "L",
            ],
            "after": [
                "$",
            ],
        },
        {
            "before": [
                "K"
            ],
            "after": [
                "g",
                "h"
            ]
        },
        {
            "before": [
                "Q"
            ],
            "commands": [
                "workbench.action.closeActiveEditor"
            ]
        },
        {
            "before": [
                "/",
            ],
            "commands": [
                "actions.find",
            ],
            "when": "editorFocus || editorIsOpen"
        },
        // / => Quick Access
        {
            "before": [
                "<leader>",
                "f",
            ],
            "commands": [
                "editor.action.formatDocument"
            ],
        },
        {
            "before": [
                "<leader>",
                "q"
            ],
            "commands": [
                "workbench.action.closePanel",
                "notifications.clearAll",
                "closeFindWidget"
            ]
        },
        {
            "before": [
                "<leader>",
                "z"
            ],
            "commands": [
                "workbench.action.toggleSidebarVisibility",
                "workbench.action.toggleActivityBarVisibility"
            ]
        },
        // copy & paste
        // store into 'a' register: "ay
        // paste from 'a' register:
        {
            "before": [
                "<leader>",
                "v"
            ],
            "after": [
                "\"",
                "a",
                "p"
            ]
        },
        // d => debugger
        {
            "before": [
                "<leader>",
                "d",
                "d"
            ],
            "commands": [
                "editor.debug.action.toggleBreakpoint",
            ],
        },
        {
            "before": [
                "<leader>",
                "d",
                "c"
            ],
            "commands": [
                "workbench.debug.viewlet.action.removeAllBreakpoints",
            ],
        },
        {
            "before": [
                "<leader>",
                "d",
                "g"
            ],
            "commands": [
                "workbench.action.debug.start"
            ],
        },
        {
            "before": [
                "<leader>",
                "d",
                "q"
            ],
            "commands": [
                "workbench.action.debug.stop"
            ],
        },
        // t => testing
        {
            "before": [
                "<leader>",
                "t",
                "t"
            ],
            "commands": [
                "workbench.view.testing.focus"
            ],
        },
        {
            "before": [
                "<leader>",
                "t",
                "g"
            ],
            "commands": [
                "testing.debugAtCursor"
            ],
        },
        {
            "before": [
                "<leader>",
                "t",
                "r"
            ],
            "commands": [
                "testing.debugLastRun"
            ],
        },
        {
            "before": [
                "<leader>",
                "t",
                "c"
            ],
            "commands": [
                "go.test.coverage"
            ],
        },
        // g => go
        {
            "before": [
                "<leader>",
                "g",
                "f"
            ],
            "commands": [
                "revealInExplorer"
            ],
        },
        {
            "before": [
                "<leader>",
                "g",
                "g"
            ],
            "commands": [
                "workbench.action.quickOpen"
            ],
        },
        {
            "before": [
                "<leader>",
                "g",
                "s"
            ],
            "commands": [
                "search.action.openEditor",
            ],
        },
        {
            "before": [
                "<leader>",
                "g",
                "o"
            ],
            "commands": [
                "workbench.action.gotoSymbol",
            ],
        },
        {
            "before": [
                "<leader>",
                "g",
                "t"
            ],
            "commands": [
                "openInIntegratedTerminal",
            ],
        },
        {
            "before": [
                "<leader>",
                "g",
                "w"
            ],
            "commands": [
                "workbench.action.switchWindow",
            ],
        },
        {
            "before": [
                "<leader>",
                "g",
                "r"
            ],
            "commands": [
                "workbench.action.openRecent"
            ],
        },
        // s => source control
        {
            "before": [
                "<leader>",
                "s",
                "s"
            ],
            "commands": [
                "workbench.scm.focus"
            ],
        },
        {
            "before": [
                "<leader>",
                "s",
                "d"
            ],
            "commands": [
                "git.openChange",
            ],
        },
        {
            "before": [
                "<leader>",
                "s",
                "f"
            ],
            "commands": [
                "git.openFile",
            ],
        },
        {
            "before": [
                "<leader>",
                "s",
                "c"
            ],
            "commands": [
                "git.closeAllDiffEditors",
            ],
        },
        // e => editor
        {
            "before": [
                "<leader>",
                "e",
                "j"
            ],
            "commands": [
                "workbench.action.editor.nextChange",
                "workbench.action.compareEditor.nextChange"
            ],
        },
        {
            "before": [
                "<leader>",
                "e",
                "J"
            ],
            "commands": [
                "workbench.action.editor.previousChange",
                "workbench.action.compareEditor.previousChange"
            ],
        },
        {
            "before": [
                "<leader>",
                "e",
                "n"
            ],
            "commands": [
                "editor.action.marker.next",
            ],
        },
        {
            "before": [
                "<leader>",
                "e",
                "N"
            ],
            "commands": [
                "editor.action.marker.prev",
            ],
        },
        {
            "before": [
                "<leader>",
                "e",
                "w"
            ],
            "commands": [
                "editor.action.toggleWordWrap"
            ],
        },
        // r => refactor
        {
            "before": [
                "<leader>",
                "r",
                "n"
            ],
            "commands": [
                "editor.action.rename"
            ],
        },
        {
            "before": [
                "<leader>",
                "r",
                "u"
            ],
            "commands": [
                "references-view.findReferences"
            ],
        },
        {
            "before": [
                "<leader>",
                "r",
                "r"
            ],
            "commands": [
                "references-view.tree.focus",
            ],
        },
        {
            "before": [
                "<leader>",
                "r",
                "i"
            ],
            "commands": [
                "editor.action.goToImplementation",
            ],
        },
        // w => window management
        {
            "before": [
                "<leader>",
                "w",
                "h"
            ],
            "commands": [
                "workbench.action.moveEditorLeftInGroup"
            ],
        },
        {
            "before": [
                "<leader>",
                "w",
                "l"
            ],
            "commands": [
                "workbench.action.moveEditorRightInGroup"
            ],
        },
        {
            "before": [
                "<leader>",
                "w",
                "g"
            ],
            "commands": [
                "workbench.action.focusNextGroup"
            ],
        },
        {
            "before": [
                "<leader>",
                "w",
                "n"
            ],
            "commands": [
                "workbench.action.splitEditor",
                "workbench.action.files.newUntitledFile",
                "workbench.action.closeOtherEditors"
            ],
        },
        {
            "before": [
                "<leader>",
                "w",
                "c"
            ],
            "commands": [
                "workbench.action.closeOtherEditors"
            ],
        },
        // t => panel
        {
            "before": [
                "<leader>",
                "t",
                "h"
            ],
            "commands": [
                "workbench.action.problems.focus"
            ],
        },
        {
            "before": [
                "<leader>",
                "t",
                "j"
            ],
            "commands": [
                "workbench.panel.output.focus"
            ],
        },
        {
            "before": [
                "<leader>",
                "t",
                "k"
            ],
            "commands": [
                "workbench.debug.action.focusRepl"
            ],
        },
        {
            "before": [
                "<leader>",
                "t",
                "l"
            ],
            "commands": [
                "terminal.focus"
            ],
        },
        {
            "before": [
                "<leader>",
                "t",
                ";"
            ],
            "commands": [
                "workbench.panel.testResults.view.focus"
            ],
        },
    ],
    // Apperence
    "window.autoDetectColorScheme": true,
    "workbench.preferredDarkColorTheme": "GitHub Dark",
    "workbench.preferredLightColorTheme": "GitHub Light",
    "workbench.colorTheme": "GitHub Light",
    "editor.bracketPairColorization.enabled": false,
    "editor.fontSize": 14,
    "terminal.integrated.fontSize": 14,
    // Hide unused UI elements
    "editor.minimap.enabled": false,
    "window.commandCenter": false,
    "workbench.layoutControl.enabled": false,
    // Source Control
    "git.autofetch": true,
    "git.openRepositoryInParentFolders": "never",
    "scm.defaultViewMode": "tree",
    "scm.showActionButton": false,
    "git.showCommitInput": false,
    "diffEditor.hideUnchangedRegions.enabled": false, // prevent vim bug
    // Editor
    "files.autoSave": "onFocusChange",
    "explorer.confirmDragAndDrop": false,
    "update.mode": "manual",
    "editor.wordWrap": "on",
    "editor.rulers": [
        120
    ],
    "editor.accessibilitySupport": "off",
    "editor.stickyScroll.enabled": true,
    "editor.hover.enabled": false,
    "workbench.editor.enablePreview": false,
    "window.newWindowDimensions": "maximized",
    "workbench.startupEditor": "newUntitledFile",
    "window.openFoldersInNewWindow": "on"
}