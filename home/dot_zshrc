export LANG=en_US.UTF-8

# oh my zsh settings
export ZSH="$HOME/.oh-my-zsh"
zstyle ':omz:update' mode reminder
zstyle ':omz:update' frequency 90

plugins=(zsh-autosuggestions fzf fzf-tab kubectl)

source $ZSH/oh-my-zsh.sh

# prompt
eval "$(starship init zsh)"

# z 
eval "$(zoxide init zsh)"

# custom configs
export EDITOR=vim
bindkey '^v' edit-command-line

# alias
alias v='vim -'
alias le='less -R'

r() {
  [ "${NNNLVL:-0}" -eq 0 ] || {
    echo "nnn is already running"
    return
  }
  export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
  command nnn -eEC "$@"

  [ ! -f "$NNN_TMPFILE" ] || {
    . "$NNN_TMPFILE"
    rm -f "$NNN_TMPFILE" > /dev/null
  }
}

copy-git-branch-name() {
  git symbolic-ref --short HEAD | awk '{printf "%s", $0}' | pbcopy
}

# KC --> kube ctx
# reset kubeconfig by default
export KUBECONFIG=""

ORIG_PROMPT="$PROMPT"

kc() {
  local selected_file
  selected_file=$(find "$KC_KUBECONFIG_DIR" -type f | fzf)

  if [ $? -ne 0 ]; then
    echo "failed to select kubeconfig, kc exited"
    return 1
  fi
  
  export KUBECONFIG="$selected_file"

  local kubeconfig_file_name
  kubeconfig_file_name=$(basename "$selected_file" | sed -e 's/\.[^.]*$//')
  export PROMPT=$'\n'"KUBECONFIG CTX -> ${kubeconfig_file_name}$ORIG_PROMPT"
}

kcc() {
  export KUBECONFIG=""
  export PROMPT="$ORIG_PROMPT"
}

kci() {
  kubectl get ns
  kubectl config view
}
